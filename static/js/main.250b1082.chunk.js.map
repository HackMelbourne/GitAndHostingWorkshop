{"version":3,"sources":["hooks.js","components/CoinPage.js","components/CoinCard.js","components/HomePage.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","status","setStatus","useEffect","axios","then","res","catch","err","console","error","CoinPage","id","useParams","Typography","name","description","variant","dangerouslySetInnerHTML","__html","en","CoinCard","image","price","current_price","symbol","market_cap","history","useHistory","Card","onClick","push","CardMedia","style","height","CardContent","HomePage","Grid","container","spacing","map","coin","item","xs","Router","path","component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"4PAGO,SAASA,EAASC,GACvB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,qBAAU,WACHN,IAELK,EAAU,YAEVE,IAAMP,GACHQ,MAAK,SAACC,GACLN,EAAQM,EAAIP,MACZG,EAAU,gBAEXK,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdN,EAAU,eAEb,CAACL,IAEG,CAAEI,SAAQF,Q,WCEJY,EArBE,WACf,IAAQC,EAAOC,cAAPD,GAER,EAAyBhB,EAAS,0CAAD,OACWgB,IADpCb,EAAR,EAAQA,KAIR,GAAe,cAJf,EAAcE,OAKZ,OAAO,cAACa,EAAA,EAAD,yBAGT,IAAQC,EAAsBhB,EAAtBgB,KAAMC,EAAgBjB,EAAhBiB,YAEd,OACE,qCACE,cAACF,EAAA,EAAD,CAAYG,QAAQ,KAApB,SAA0BF,IAC1B,qBAAKG,wBAAyB,CAAEC,OAAQH,EAAYI,U,wCCO3CC,EAxBE,SAAC,GAOX,IANLN,EAMI,EANJA,KACAO,EAKI,EALJA,MACeC,EAIX,EAJJC,cACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACAd,EACI,EADJA,GAEMe,EAAUC,cAEhB,OACE,eAACC,EAAA,EAAD,CAAMC,QAAS,kBAAMH,EAAQI,KAAR,WAAiBnB,KAAtC,UACE,cAACoB,EAAA,EAAD,CAAWV,MAAOA,EAAOW,MAAO,CAAEC,OAAQ,OAC1C,eAACC,EAAA,EAAD,WACE,eAACrB,EAAA,EAAD,CAAYG,QAAQ,KAApB,UACGF,EADH,KACWU,EADX,OAGA,eAACX,EAAA,EAAD,CAAYG,QAAQ,QAApB,yBAAyCM,EAAzC,UACA,eAACT,EAAA,EAAD,CAAYG,QAAQ,QAApB,4BAA4CS,YCQrCU,EAzBE,WACf,MAAyBxC,EACvB,wFADMG,EAAR,EAAQA,KAIR,MAAe,aAJf,EAAcE,OAKL,cAACa,EAAA,EAAD,yBAIP,qCACE,cAACA,EAAA,EAAD,CAAYG,QAAQ,KAApB,+BAEA,cAACoB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGxC,GACCA,EAAKyC,KAAI,SAACC,GAAD,OACP,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAiBC,GAAI,EAA/B,SACE,cAAC,EAAD,eAAcF,KADAA,EAAK1B,eCTlB6B,EAPA,kBACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,UAAWnC,IAC9B,cAAC,IAAD,CAAOkC,KAAK,IAAIC,UAAWV,QCIhBW,MARf,WACE,OACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,yBAAlB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.250b1082.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport function useFetch(url) {\n  const [data, setData] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n\n  useEffect(() => {\n    if (!url) return;\n\n    setStatus(\"fetching\");\n\n    axios(url)\n      .then((res) => {\n        setData(res.data);\n        setStatus(\"succeeded\");\n      })\n      .catch((err) => {\n        console.error(err);\n        setStatus(\"error\");\n      });\n  }, [url]);\n\n  return { status, data };\n}\n","import { Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetch } from \"../hooks\";\n\nconst CoinPage = () => {\n  const { id } = useParams();\n\n  const { data, status } = useFetch(\n    `https://api.coingecko.com/api/v3/coins/${id}`\n  );\n\n  if (status !== \"succeeded\") {\n    return <Typography>Loading...</Typography>;\n  }\n\n  const { name, description } = data;\n\n  return (\n    <>\n      <Typography variant=\"h3\">{name}</Typography>\n      <div dangerouslySetInnerHTML={{ __html: description.en }}></div>\n    </>\n  );\n};\n\nexport default CoinPage;\n","import { Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CoinCard = ({\n  name,\n  image,\n  current_price: price,\n  symbol,\n  market_cap,\n  id,\n}) => {\n  const history = useHistory();\n\n  return (\n    <Card onClick={() => history.push(`/${id}`)}>\n      <CardMedia image={image} style={{ height: 250 }}></CardMedia>\n      <CardContent>\n        <Typography variant=\"h6\">\n          {name} ({symbol})\n        </Typography>\n        <Typography variant=\"body1\">Trading at ${price} AUD</Typography>\n        <Typography variant=\"body1\">Market cap of ${market_cap}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CoinCard;\n","import { Typography, Grid } from \"@material-ui/core\";\nimport { useFetch } from \"../hooks\";\nimport CoinCard from \"./CoinCard\";\n\nconst HomePage = () => {\n  const { data, status } = useFetch(\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=aud&order=market_cap_desc\"\n  );\n\n  if (status === \"fetching\") {\n    return <Typography>Loading...</Typography>;\n  }\n\n  return (\n    <>\n      <Typography variant=\"h3\">Cryptocurrencies!</Typography>\n\n      <Grid container spacing={2}>\n        {data &&\n          data.map((coin) => (\n            <Grid item key={coin.name} xs={3}>\n              <CoinCard {...coin} />\n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { Switch, Route } from \"react-router-dom\";\nimport CoinPage from \"./components/CoinPage\";\nimport HomePage from \"./components/HomePage\";\n\nconst Router = () => (\n  <Switch>\n    <Route path=\"/:id\" component={CoinPage} />\n    <Route path=\"/\" component={HomePage} />\n  </Switch>\n);\n\nexport default Router;\n","import { Container } from \"@material-ui/core\";\nimport Router from \"./Router\";\n\nfunction App() {\n  return (\n    <Container>\n      <Router />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}